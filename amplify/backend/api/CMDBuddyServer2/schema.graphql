input AMPLIFY {
	globalAuthRule: AuthRule = { allow: public }
}

type User @model @auth(rules: [{ allow: public }]) {
	id: ID! @primaryKey
	email: String! @index(name: "byEmail", queryField: "userByEmail")
	darkMode: Boolean!
	commands: [Command] @hasMany(indexName: "byUser", fields: ["id"])
}

type Command @model @auth(rules: [{ allow: public }]) {
	id: ID!
	baseCommand: String!
	title: String!
	order: Int!
	userID: ID! @index(name: "byUser")
	user: User @belongsTo(fields: ["userID"])
	parameters: [Parameter] @hasMany(indexName: "byCommand", fields: ["id"])
}

enum ParameterType {
	STRING
	INT
	BOOLEAN
	DROPDOWN
}

type Parameter @model @auth(rules: [{ allow: public }]) {
	id: ID!
	type: ParameterType!
	defaultValue: String
	name: String!
	order: Int!
	validationRegex: String
	length: Int
	minValue: Int
	maxValue: Int
	isNullable: Boolean
	allowedValues: [String]
	commandID: ID! @index(name: "byCommand")
	command: Command @belongsTo(fields: ["commandID"])
}
